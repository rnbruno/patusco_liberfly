docker ps -a --format '{{.Names}}'| xargs docker rm --force
docker-compose logs db
docker exec -it <container_id_or_name> /bin/bash
docker exec -it 0cc2c6f71841 /bin/bash
docker images -a --format '{{.Repository}}:{{.Tag}}' | xargs docker rmi --force

docker-compose up -d

docker-compose exec app bash
composer install
php artisan key:generate

https://github.com/jeroennoten/Laravel-AdminLTE/wiki/Installation

php artisan adminlte:install --only=auth_views

docker ps -a --format '{{.Names}}'| xargs docker rm --force
docker-compose logs db
docker exec -it <container_id_or_name> /bin/bash
docker exec -it 0cc2c6f71841 /bin/bash
docker images -a --format '{{.Repository}}:{{.Tag}}' | xargs docker rmi --force



**No arquivo app/Providers/AppServiceProvider.php, registre o middleware do Inertia.js:

php
Copiar c�digo

composer require inertiajs/inertia-laravel

php artisan inertia:middleware


use Inertia\Inertia;
use Inertia\Middleware;
protected $middlewareGroups = [
    'web' => [
        // ...
        \App\Http\Middleware\HandleInertiaRequests::class,
    ],
    // ...
];

npm install @inertiajs/inertia @inertiajs/inertia-vue3 vue@next
� para isso, faciliar a integra��o

public function boot()
{
    Inertia::setRootView('app');
}

adduser myuser
usermod -aG sudo myuser
su - myuser

php artisan config:cache
composer install --optimize-autoloader --no-dev
php artisan config:cache
php artisan route:cache
php artisan view:cache

//Login
composer require laravel/breeze --dev
php artisan breeze install

Ver o daemon dos containers
chmod 777 /var/run/docker.sock

Lucascudo pacote pt-br

composer require inertiajs/inertia-laravel


https://youtu.be/TW6Yg79YkAs?list=PLa9jxxDE6i_1cWCmpsizPHS70XId43Ujy

npm install vue@3
npm install @vitejs/plugin-vue


docker ps -a --format '{{.Names}}'| xargs docker rm --force
docker-compose logs db
docker exec -it <container_id_or_name> /bin/bash
docker exec -it 0cc2c6f71841 /bin/bash
docker images -a --format '{{.Repository}}:{{.Tag}}' | xargs docker rmi --force

docker-compose up -d

docker-compose exec app bash
composer install
php artisan key:generate

https://github.com/jeroennoten/Laravel-AdminLTE/wiki/Installation

php artisan adminlte:install --only=auth_views

docker ps -a --format '{{.Names}}'| xargs docker rm --force
docker-compose logs db
docker exec -it <container_id_or_name> /bin/bash
docker exec -it 0cc2c6f71841 /bin/bash
docker images -a --format '{{.Repository}}:{{.Tag}}' | xargs docker rmi --force



**No arquivo app/Providers/AppServiceProvider.php, registre o middleware do Inertia.js:

php
Copiar c�digo

composer require inertiajs/inertia-laravel

php artisan inertia:middleware


use Inertia\Inertia;
use Inertia\Middleware;
protected $middlewareGroups = [
    'web' => [
        // ...
        \App\Http\Middleware\HandleInertiaRequests::class,
    ],
    // ...
];

npm install @inertiajs/inertia @inertiajs/inertia-vue3 vue@next
� para isso, faciliar a integra��o

public function boot()
{
    Inertia::setRootView('app');
}

adduser myuser
usermod -aG sudo myuser
su - myuser

php artisan config:cache
composer install --optimize-autoloader --no-dev
php artisan config:cache
php artisan route:cache
php artisan view:cache

//Login
composer require laravel/breeze --dev
php artisan breeze install

Ver o daemon dos containers
chmod 777 /var/run/docker.sock

Lucascudo pacote pt-br

composer require inertiajs/inertia-laravel


https://youtu.be/TW6Yg79YkAs?list=PLa9jxxDE6i_1cWCmpsizPHS70XId43Ujy

npm install vue@3
npm install @vitejs/plugin-vue

node -v
npm -v

sudo apt-get remove nodejs npm
curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
sudo apt-get install -y nodejs


MIgrate
php artisan migrate

Translate PT-BR
php artisan lang:publish
composer require lucascudo/laravel-pt-br-localization --dev
php artisan vendor:publish --tag=laravel-pt-br-localization


// Altere Linha 85 do arquivo config/app.php para:
'locale' => 'pt_BR'

// Para versões 11.x altere a linha 8 do arquivo .env
APP_LOCALE=pt_BR

npm install sweetalert2

php artisan make:controller --resource NomeDoController --model=NomeDoModel


    // "content-hash": "eda1b72967c28f84988d5374d8de43d0",
